import math
import sys

#choose variable based on inputs
def varName(number, variant, variableID):
    varItems = [[["pixelZeroA","zeroAPixelsX","zeroAPixelsY"],["pixelZeroB","zeroBPixelsX","zeroBPixelsY"]],
                [["pixelOneA","oneAPixelsX","oneAPixelsY"],["pixelOneB","oneBPixelsX","oneBPixelsY"]],
                [["pixelTwoA","twoAPixelsX","twoAPixelsY"],["pixelTwoB","twoBPixelsX","twoBPixelsY"]],
                [["pixelThreeA","threeAPixelsX","threeAPixelsY"],["pixelThreeB","threeBPixelsX","threeBPixelsY"]],
                [["pixelFourA","fourAPixelsX","fourAPixelsY"],["pixelFourB","fourBPixelsX","fourBPixelsY"]],
                [["pixelFiveA","fiveAPixelsX","fiveAPixelsY"],["pixelFiveB","fiveBPixelsX","fiveBPixelsY"]],
                [["pixelSixA","sixAPixelsX","sixAPixelsY"],["pixelSixB","sixBPixelsX","sixBPixelsY"]],
                [["pixelSevenA","sevenAPixelsX","sevenAPixelsY"],["pixelSevenB","sevenBPixelsX","sevenBPixelsY"]],
                [["pixelEightA","eightAPixelsX","eightAPixelsY"],["pixelEightB","eightBPixelsX","eightBPixelsY"]],
                [["pixelNineA","nineAPixelsX","nineAPixelsY"],["pixelNineB","nineBPixelsX","nineBPixelsY"]]];
    return(varItems[number][variant][variableID]);

#"slice" all the numbers
def mySlice():
    for i in range(0,10):
        print("\nNumber:",i,"\n")
        inputPixelsX.clear();
        inputPixelsY.clear();
        forLoopY = 0;
        while forLoopY < IMAGESIZE: #forLoop because of preference over python FOR
            forLoopX = 0;
            while forLoopX < IMAGESIZE:
                if eval((varName(i,0,0)+"[forLoopY][forLoopX] == 1")):
                    inputPixelsX.append(forLoopX);
                    inputPixelsY.append(forLoopY);
                    print("Found Pixel at ", forLoopX, forLoopY);
                forLoopX += 1;
            forLoopY += 1;
        print(inputPixelsX,"and",inputPixelsY);


IMAGESIZE = 16; #16*16 image processing
imagesToCheck = [[1,0],[2,0]]

pixelInputImage = [
[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], 
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], 
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], 
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]];

inputPixelsX = [];
inputPixelsY = [];

pixelTemplate = [
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], 
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], 
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], 
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]];

pixelZeroA = [
[0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0], 
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], 
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], 
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]];

zeroAPixelsX = [];
zeroAPixelsY = [];

pixelOneA = [
[0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0], 
[0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0],
[0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0], 
[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0], 
[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
[0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0]];

oneAPixelsX = [7, 8, 6, 8, 5, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 6, 7, 8, 9, 10];
oneAPixelsY = [0, 0, 1, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 15, 15, 15, 15];

pixelTwoA = [
[0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0], 
[0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0],
[0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0], 
[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0], 
[0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0]];

twoAPixelsX = [7, 8, 9, 6, 10, 5, 11, 11, 12, 11, 11, 10, 10, 9, 8, 8, 7, 6, 6, 5, 6, 7, 8, 9, 10, 11];
twoAPixelsY = [0, 0, 0, 1, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 15, 15, 15, 15, 15, 15];

pixelThreeA = [
[0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0], 
[0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0],
[0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0],
[0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0], 
[0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0], 
[0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0],
[0,0,0,0,0,1,1,0,0,0,1,0,0,0,0,0],
[0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0]];

threeAPixelsX = [7, 8, 9, 6, 10, 5, 11, 11, 12, 11, 11, 10, 7, 8, 9, 10, 10, 11, 11, 11, 4, 10, 5, 6, 10, 7, 8, 9];
threeAPixelsY = [0, 0, 0, 1, 1, 2, 2, 3, 4, 5, 6, 7, 8, 8, 8, 8, 9, 10, 11, 12, 13, 13, 14, 14, 14, 15, 15, 15];

pixelFourA = [
[0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0],
[0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0],
[0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0],
[0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0],
[0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0],
[0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0],
[0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0],
[0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0],
[0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0]];

fourAPixelsX = [];
fourAPixelsY = [];

pixelFiveA = [
[0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0],
[0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],
[0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,0],
[0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0]];

fiveAPixelsX = [];
fiveAPixelsY = [];

pixelSixA = [
[0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0], 
[0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0],
[0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0], 
[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0], 
[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
[0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0]];

sixAPixelsX = [];
sixAPixelsY = [];

pixelSevenA = [
[0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0], 
[0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0],
[0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0], 
[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0], 
[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
[0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0]];

sevenAPixelsX = [];
sevenAPixelsY = [];

pixelEightA = [
[0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0], 
[0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0],
[0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0], 
[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0], 
[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
[0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0]];

eightAPixelsX = [];
eightAPixelsY = [];

pixelNineA = [
[0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0], 
[0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0],
[0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0], 
[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0], 
[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
[0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0]];

nineAPixelsX = [];
nineAPixelsY = [];

run = eval(input("What would you like to do? 1. Start 2. Slice (debug-only)"));
#CHANGE THIS EVAL TO INT BEFORE PUBLISHING! USER CAN RUN COMMANDS

if run == 2:
    mySlice();
    sys.exit();
    

#algorithm one: need to change input image to pixel map in a list: inputPixelsX and inputPixelsY
forLoopY = 0;
while forLoopY < IMAGESIZE: #forLoop because of preference over python FOR
    forLoopX = 0;
    while forLoopX < IMAGESIZE:
        if pixelInputImage[forLoopY][forLoopX] == 1:
            inputPixelsX.append(forLoopX);
            inputPixelsY.append(forLoopY);
            print("Found Pixel at ", forLoopX, forLoopY);
        forLoopX += 1;
    forLoopY += 1;
print(inputPixelsX,"and",inputPixelsY);
#that was easy


#algorithm two: here we go
bestImage = [255, 255];
bestImageScore = 255;
for imageID in imagesToCheck:
    totalScore = 0;
    for inputPixelIndex in range(0, len(inputPixelsX)):
        bestDistance = 255;
        for imagePixelIndex in range(0, len(eval(varName(imageID[0], imageID[1], 1)))):
            distance = math.hypot( ( (inputPixelsX[inputPixelIndex]) - (eval(varName(imageID[0], imageID[1], 1)+"[imagePixelIndex]")) ) ,
                                   ( (inputPixelsY[inputPixelIndex]) - (eval(varName(imageID[0], imageID[1], 2)+"[imagePixelIndex]")) ) );
            if distance < bestDistance:
                bestDistance = distance;
                print("Found better distance:", distance);
        print("Best pixel distance was:", bestDistance);
        totalScore += bestDistance;
    averageScore = totalScore / len(inputPixelsX);
    print("Average score is:", averageScore, "/nand Total score is:", totalScore);
    if averageScore < bestImageScore:
        bestImageScore = averageScore;
        bestImage = imageID;
        print("New best image with an average score of:", averageScore, "and an ID of", imageID)
print("The most suitable image for the inputted image is:", bestImage);
